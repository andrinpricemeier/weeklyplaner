name: Deploy
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webapp
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: webapp
          useLockFile: false

      - uses: bufbuild/buf-setup-action@v1.7.0
      - uses: arduino/setup-protoc@v1
      - name: Build protobuf
        run: npm run build-protobuf

      - name: üî¨ Lint
        run: npm run lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webapp
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: webapp
          useLockFile: false

      - uses: bufbuild/buf-setup-action@v1.7.0
      - uses: arduino/setup-protoc@v1
      - name: Build protobuf
        run: npm run build-protobuf

      - name: üîé Type check
        run: npm run typecheck --if-present


  unittest-webapp:
    name: Unittest webapp
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webapp
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: webapp
          useLockFile: false

      - uses: bufbuild/buf-setup-action@v1.7.0
      - uses: arduino/setup-protoc@v1
      - name: Build protobuf
        run: npm run build-protobuf

      - name: ‚ö° Run vitest
        run: npm run test

      - uses: actions/upload-artifact@master
        with:
          name: webapp-unittest-report
          path: webapp/sonar-report.xml

  test-reporting:
    name: Test Reporting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./reporting
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Run tests
        run: ./gradlew test

  sonarcloud-webapp:
    name: SonarCloud Webapp
    runs-on: ubuntu-latest
    needs: [unittest-webapp]
    defaults:
      run:
        working-directory: ./webapp
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Retrieve saved test report
        uses: actions/download-artifact@v2
        with:
          name: webapp-unittest-report
          path: webapp

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: webapp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_WEBAPP }}

  sonarcloud-reporting:
    name: SonarCloud Reporting
    runs-on: ubuntu-latest
    needs: [test-reporting]
    defaults:
      run:
        working-directory: ./reporting
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_REPORTING }}
        run: ./gradlew build sonarqube --info

  build-webapp:
    name: Build Webapp
    runs-on: ubuntu-latest
    needs: [lint, typecheck, sonarcloud-webapp]
    defaults:
      run:
        working-directory: ./webapp
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name_webapp
        with:
          file: "webapp/fly.toml"
          field: "app"

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîë Fly Registry Auth
        uses: superfly/flyctl-actions/setup-flyctl@master
      - run: |
          flyctl auth docker -t ${{ secrets.FLY_API_TOKEN }}

      - name: üê≥ Docker build
        uses: docker/build-push-action@v3
        with:
          context: webapp
          push: true
          tags: registry.fly.io/${{ steps.app_name_webapp.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-reporting:
    name: Build Reporting
    runs-on: ubuntu-latest
    needs: [sonarcloud-reporting]
    defaults:
      run:
        working-directory: ./reporting
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build and analyze
        run: ./gradlew build

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name_reporting
        with:
          file: "reporting/fly.toml"
          field: "app"

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîë Fly Registry Auth
        uses: superfly/flyctl-actions/setup-flyctl@master
      - run: |
          flyctl auth docker -t ${{ secrets.FLY_API_TOKEN }}

      - name: üê≥ Docker build
        uses: docker/build-push-action@v3
        with:
          context: reporting
          push: true
          tags: registry.fly.io/${{ steps.app_name_reporting.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy-webapp:
    name: Deploy Webapp
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webapp
    needs: [build-webapp]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áCheckout repo
        uses: actions/checkout@v3

      - name: Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name_webapp
        with:
          file: "webapp/fly.toml"
          field: "app"

      - name: Deploy Production
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy webapp --image registry.fly.io/${{ steps.app_name_webapp.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-reporting:
    name: Deploy Reporting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./reporting
    needs: [build-reporting]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áCheckout repo
        uses: actions/checkout@v3

      - name: Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name_reporting
        with:
          file: "reporting/fly.toml"
          field: "app"

      - name: Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy reporting --image registry.fly.io/${{ steps.app_name_reporting.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}